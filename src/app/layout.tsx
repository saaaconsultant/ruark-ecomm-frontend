"use client";
import type { Metadata } from "next";
import "./globals.css";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { Montserrat, Merriweather } from "next/font/google";
import { useState } from "react";
import CartDrawer from "@/components/CartDrawer";

const montserrat = Montserrat({
  subsets: ["latin"],
  variable: "--font-montserrat",
  weight: ["400", "500", "700"], // Include weights for body, subheading, and nav
});

const itcNovarese = Merriweather({
  // Merriweather used as a similar serif substitute for ITC Novarese
  subsets: ["latin"],
  variable: "--font-itc-novarese",
  weight: ["400", "700"], // Regular and bold for headings
});

const avenirNext = Montserrat({
  // Replace Avenir Next with Montserrat for compatibility
  subsets: ["latin"],
  variable: "--font-avenir-next",
  weight: ["400", "500"], // Regular and semi-bold for buttons
});
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [isDrawerOpen, setIsDrawerOpen] = useState(false);

  const handleDrawerToggle = () => {
    setIsDrawerOpen((prev) => !prev);
  };
  return (
    <html
      lang="en"
      className={` 
      ${montserrat.variable}
      ${itcNovarese.variable}
      ${avenirNext.variable}
    `}
    >
      <body className={` antialiased overflow-x-hidden`}>
        <div className="sticky top-0 z-50 bg-white/50 backdrop-blur-md shadow-sm">
          <Header onCartClick={handleDrawerToggle} />
        </div>
        <div className="overflow-y-auto ">{children}</div>
        <Footer />

        {isDrawerOpen && (
          <div
            className="fixed inset-0 bg-black/50 z-40"
            onClick={handleDrawerToggle}
          ></div>
        )}
        {isDrawerOpen && (
          <div
            className="fixed inset-0 bg-black/50 z-40"
            onClick={handleDrawerToggle}
          ></div>
        )}
        <CartDrawer
          isDrawerOpen={isDrawerOpen}
          handleDrawerToggle={handleDrawerToggle}
        />
      </body>
    </html>
  );
}
